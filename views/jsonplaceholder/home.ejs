<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fetch API</title>
    <link rel="stylesheet" href="../../public/jsonplaceholder/style.css">
</head>
<body>
    <h2>Vikram Kanzariya</h2>
    <h4>24DEV085</h4>

    <div class="container">
        <div class="search">
            <form action="">
                <input type="text" id="search" placeholder="Enter Values to Search">
                <input type="submit" value="Search" id="submit">
            </form>
        </div>

        <div class="table-data"></div>

    </div>


    <p class="numbers"></p>

    <br><br>

    <div class="pagination">
        
        <button class="prev">Prev</button>
        <p id="page"></p>
        <button class="next">Next</button>
    </div>


    <script>
        const fetchData = async() => {
            let data = await fetch("https://jsonplaceholder.typicode.com/posts" , {
                method:"GET",
                headers:{ 'Content-Type': 'application/json' }
            });
            data = await data.json();
            return data;
        };

        const getPosts = async(data , page = 1) => {
            let dataperPage = 10;
            let offset = (page - 1) * dataperPage;

            let totalrecords = data.length;
            // console.log("Total Records are: " + totalrecords);
            var lastPage = Number(data.length) / dataperPage;

            let d = data.slice(offset , offset + dataperPage);

             d = d.map((post) => {
             return   `<tr>
                       <td>${post.id}</td>
                       <td>${post.userId}</td>
                       <td>${post.title}</td>
                       <td>${post.body}</td>
                       <td>  <a href="/json/posts/${post.id}"> VIEW </a> </td>
                       </tr> `;
                });

                let table = 
                    `
                        <table border=1> 
                            <tr>
                                <th>PostId</th>
                                <th>UserId</th>
                                <th>Title</th>
                                <th>Description</th>
                                <th>View Data</th>
                            </tr> 
                            ` + d.join("") + `
                        </table>
                    `;

                let div = document.querySelector(".table-data");
                div.innerHTML = table;

                let pg = document.getElementById('page');
                pg.innerHTML = page;

                let number = document.querySelector('.numbers');
                number.innerHTML = `Showing ${offset+1} to ${offset + dataperPage} of ${totalrecords} Records`;
        }

        
        // Search Function
        let search = document.getElementById('search');
        let submit = document.getElementById('submit');

        submit.addEventListener('click' , function(e){
            e.preventDefault();

            if(search.value !== ""){
                let value = search.value;

                let d = data.filter((dt) => {
                    return dt.userId == value || dt.id == value || dt.title.includes(value) || dt.body.includes(value);
                })
                getPosts(d);
            }
            else{
                getPosts(data);
            }
        });

        // ---> For Pagination <---
        let prev = document.querySelector('.prev');
        let next = document.querySelector('.next');

        // ---> Prev Page
        prev.addEventListener('click' , function(){
            let prevpage = document.getElementById('page');
            page = Number(prevpage.innerHTML);

            if(page > 1){
                page = page - 1;
                getPosts(data , page);   

                if(next.hasAttribute('disabled')){
                    next.removeAttribute('disabled');
                }
            }

            if(page == 1){
                prev.setAttribute('disabled' , 'true');
            }
        });


        // ---> Next Page
        next.addEventListener('click' , function(){
            let nextPage = document.getElementById('page');
            page = Number(nextPage.innerHTML);

            if(page <= 10){
                page = page + 1;
                getPosts(data , page);

                if(prev.hasAttribute('disabled')){
                    prev.removeAttribute('disabled');
                }
            }

            if(page == 10){
                next.setAttribute('disabled' , 'true');
            }
        });

        // Immediately Invoked Function Expression (IIFE)
        var data;
        ; (
            async function call(){
                data = await fetchData();
                getPosts(data , 1);
            }
        )() 
    </script>
    
</body>
</html>